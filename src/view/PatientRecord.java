/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.patient_records.AccessControlDecorator;
import controller.patient_records.DatabasePatientRecord;
import controller.patient_records.EncryptionDecorator;
import controller.patient_records.LoggingDecorator;
import controller.patient_records.PatientRecordAccess;
import java.awt.Window;
import java.time.LocalDateTime;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.LogedUserBean;
import model.MySQL;
import view.Patient.PatientData;

/**
 *
 * @author mohan
 */
public class PatientRecord extends javax.swing.JPanel {

    /**
     * Creates new form PatientRecord
     */
    private String pid;
    private LogedUserBean userBean;
    private boolean hasData = false;
    private int recordId = 0;

    public PatientRecord(LogedUserBean userBean, String id) {
        initComponents();
        this.pid = id;
        this.userBean = userBean;
        loadData();
    }

    private void loadData() {
        try {
            int patientId = Integer.parseInt(pid);

            PatientRecordAccess basicRecord = new DatabasePatientRecord(patientId);
            PatientRecordAccess loggedRecord = new LoggingDecorator(basicRecord);
            PatientRecordAccess encryptedRecord = new EncryptionDecorator(loggedRecord);
            PatientRecordAccess securedRecord = new AccessControlDecorator(encryptedRecord);

            DefaultTableModel patientRecords = securedRecord.getRecord(userBean.getStaffRole());

            record_table.setModel(patientRecords);

            if (patientRecords.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this,
                        "No records found or access denied for role: " + userBean.getStaffRole(),
                        "Information", JOptionPane.INFORMATION_MESSAGE);
                hasData = false;
            } else {
                hasData = true;
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,
                    "Invalid patient ID: " + pid,
                    "Error", JOptionPane.ERROR_MESSAGE);
            hasData = false;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Error loading records: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            hasData = false;
        }

    }

    public boolean hasData() {
        return hasData;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        from_date_field = new com.toedter.calendar.JDateChooser();
        to_date_field1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        clear_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        record_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        jPanel1.setBackground(new java.awt.Color(0, 150, 136));

        from_date_field.setBackground(new java.awt.Color(255, 255, 255));
        from_date_field.setForeground(new java.awt.Color(0, 0, 0));
        from_date_field.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                from_date_fieldPropertyChange(evt);
            }
        });

        to_date_field1.setBackground(new java.awt.Color(255, 255, 255));
        to_date_field1.setForeground(new java.awt.Color(0, 0, 0));
        to_date_field1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                to_date_field1PropertyChange(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("From date");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("To Date");

        clear_btn.setBackground(new java.awt.Color(255, 255, 255));
        clear_btn.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        clear_btn.setForeground(new java.awt.Color(0, 0, 0));
        clear_btn.setText("Clear");
        clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(from_date_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(to_date_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clear_btn)
                    .addComponent(to_date_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(from_date_field, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        record_table.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        record_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Medical History", "Treatment", "Record DateTime"
            }
        ));
        record_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                record_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(record_table);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel3.setText("Medical History ");

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel4.setText("Treatment");

        jButton2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(288, 288, 288)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void from_date_fieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_from_date_fieldPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_from_date_fieldPropertyChange

    private void to_date_field1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_to_date_field1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_to_date_field1PropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String medical_history = jTextArea1.getText();
        String treatment = jTextArea3.getText();

        System.out.println("medical_history: " + medical_history);
        System.out.println("treatment: " + treatment);
        System.out.println(recordId);
        LocalDateTime now = LocalDateTime.now();
        if (recordId == 0) {
            JOptionPane.showMessageDialog(this, "Please Select Report From Table.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (medical_history.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please input Medical History.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (treatment.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please input Treatment.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                MySQL.execute("UPDATE `patient_records` SET `medical_history` = '" + medical_history + "', `treatment` = '" + treatment + "', `record_datetime`='" + now + "' WHERE `record_id` = '" + recordId + "'");
                JOptionPane.showMessageDialog(this, "Update Success.", "Info", JOptionPane.INFORMATION_MESSAGE);
                  clear();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clear_btnActionPerformed

    private void clear(){
        jTextArea1.setText("");
        jTextArea3.setText("");
        recordId = 0;
        loadData();
        record_table.setEnabled(true);
    }
    
    private void record_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_record_tableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            DefaultTableModel model = (DefaultTableModel) record_table.getModel();
            int selectedRow = record_table.getSelectedRow();
            if (selectedRow != -1) {
                String record_id = String.valueOf(model.getValueAt(selectedRow, 0));
                String medical_history = String.valueOf(model.getValueAt(selectedRow, 1));
                String treatment = String.valueOf(model.getValueAt(selectedRow, 2));

                int id = Integer.parseInt(record_id);
                recordId = id;
                System.out.println(record_id + "_" + medical_history + "_" + treatment);

                jTextArea1.setText(medical_history);
                jTextArea3.setText(treatment);

                record_table.setEnabled(false);
            }
        }
    }//GEN-LAST:event_record_tableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear_btn;
    private com.toedter.calendar.JDateChooser from_date_field;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTable record_table;
    private com.toedter.calendar.JDateChooser to_date_field1;
    // End of variables declaration//GEN-END:variables
}
